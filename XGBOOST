**Importa librerias**

import numpy as np
import pandas as pd
import sklearn
from sklearn.model_selection import train_test_split
from sklearn import metrics

from xgboost import XGBRFRegressor
import xgboost

import matplotlib.pyplot as plt
from matplotlib import style
import matplotlib.ticker as ticker
import seaborn as sns

**Importacion de datos**
data=pd.read_csv("ozono.csv")
data
data.info()

**Preprocesamiento**
data=data.replace("na",np.nan)
data=data.dropna(axis=0)
data['O3']=pd.to_numeric(data['O3'],errors="coerce")
data['Viento_vel']=pd.to_numeric(data['Viento_vel'],errors="coerce")
data['Viento_dir']=pd.to_numeric(data['Viento_dir'],errors="coerce")
data['Tem']=pd.to_numeric(data['Tem'],errors="coerce")
data['Hr']=pd.to_numeric(data['Hr'],errors="coerce")
data=data.drop(["Fecha",],axis=1)

**XGBOOST**
modelo = XGBRFRegressor(
            n_estimators=100,max_depth=20
        )
modelo.fit(X_train, y_train)
predicciones = modelo.predict(X_test)
score = modelo.score(X_test, y_test)
print(f'R^2 score: {score_1}')

**Visualizacion de resultados**

y_pred=modelo.predict(X_test)
y_pred
y_test_list=list(y_test)

plt.plot(y_test_list, color='red', label = 'VALOR ACTUAL')
plt.plot(y_pred, color='blue', label='VALOR PREDICHO')
plt.title('CONCENTRACION ACTUAL vs CONCENTRACION PREDICHA')
plt.xlabel('ID')
plt.ylabel('OZONO ppm')
plt.legend()
plt.show()
error_score = metrics.r2_score(y_test, y_pred)
print("R squared error : ", error_score)
